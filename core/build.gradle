apply plugin: 'android'

task wrapper(type: Wrapper) {
    gradleVersion = '1.6'
}


dependencies {
    compile 'com.google.android:support-v4:r6'
    compile  'de.greenrobot:greendao:1.3.1'
    compile  'com.github.rtyley:roboguice-sherlock:1.5'
    compile 'com.octo.android.robospice:robospice:1.4.6'
    compile 'com.octo.android.robospice:robospice-spring-android:1.4.6'
    compile 'com.google.code.gson:gson:2.2.4'
    //compile  'com.github.chrisbanes.photoview:library:1.2.1'
    compile  'de.greenrobot:eventbus:2.0.2'
    compile  'com.baidu.android:mobstat:3.1'
    compile  'com.baidu.android:mobads:3.2'
    compile  'com.baidu.android:mobads_wall:1.1'
    compile  'com.baidu.android:pushservice:2.2.1'
    compile 'ch.acra:acra:4.5.0'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.8.5'
    compile 'cn.nit:autoupdate:1.0.0'
    compile 'com.actionbarsherlock:actionbarsherlock:4.3.2-SNAPSHOT'
    compile 'com.capricorn:arcmenu:1.0.0'
    compile 'me.maxwin.view:OneXListview:1.0.0'

    compile 'com.baidu.android:pcs:2.1.0'
    compile 'com.baidu.android:pcs-sd:1.0.0'
    compile 'com.baidu.android:oauth:2.0.0'
    compile 'org.apache.httpcomponents:httpmime:4.2.5'
}


tasks.withType(Compile) { compileTask -> compileTask.dependsOn copyNativeLibs }
tasks.withType(com.android.build.gradle.tasks.PackageApplication) { pkgTask ->pkgTask.jniDir new File(buildDir, 'native-libs')}

    task copyNativeLibs(type: Copy) {
        println 'call copyNativeLibs'
        from fileTree(dir: 'libs', include: '**/*.so' )
        into 'build/native-libs'
    }


android {
    defaultConfig {
//        minSdkVersion 7
//        targetSdkVersion 16
        versionCode 10
        versionName "1.1.0"
    }

    compileSdkVersion 17
    buildToolsVersion "17.0.0"

    project.archivesBaseName = "beauty";

    signingConfigs {
        release{
            storeFile file("nit.keystore")
            storePassword "790624"
            keyAlias "mykey"
            keyPassword "790624"
        }
    }



    buildTypes {
        debug {
            packageNameSuffix = ".debug"
            versionNameSuffix = "-DEBUG"
            //signingConfig signingConfigs.debug
        }

        release {
            signingConfig signingConfigs.release
        }

    }


    productFlavors {
        mm {
            packageName "cn.nit.beauty"

        }
    }

    applicationVariants.each { variant ->

        def file = variant.outputFile
        variant.outputFile = new File(file.parent, file.name.replace(".apk", "-" + defaultConfig.versionCode + "-" + defaultConfig.versionName + ".apk"))
    }

}

